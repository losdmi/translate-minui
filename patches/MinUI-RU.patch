diff --git a/skeleton/SYSTEM/rg35xx/paks/Emus/FC.pak/default.cfg b/skeleton/SYSTEM/rg35xx/paks/Emus/FC.pak/default.cfg
index ac27532..bbecedd 100644
--- a/skeleton/SYSTEM/rg35xx/paks/Emus/FC.pak/default.cfg
+++ b/skeleton/SYSTEM/rg35xx/paks/Emus/FC.pak/default.cfg
@@ -12,8 +12,8 @@ bind Select = SELECT
 bind Start = START
 bind A Button = A
 bind B Button = B
-bind A Turbo = NONE:X
-bind B Turbo = NONE:Y
+bind A Turbo = X
+bind B Turbo = Y
 bind Change Disk = NONE:L1
 bind Insert Disk = NONE:R1
 bind Insert Coin = NONE:R2
diff --git a/skeleton/SYSTEM/rg35xx/paks/Emus/GB.pak/default.cfg b/skeleton/SYSTEM/rg35xx/paks/Emus/GB.pak/default.cfg
index a5ec628..c37075a 100644
--- a/skeleton/SYSTEM/rg35xx/paks/Emus/GB.pak/default.cfg
+++ b/skeleton/SYSTEM/rg35xx/paks/Emus/GB.pak/default.cfg
@@ -14,7 +14,7 @@ bind Select = SELECT
 bind Start = START
 bind A Button = A
 bind B Button = B
-bind A Turbo = NONE:X
-bind B Turbo = NONE:Y
+bind A Turbo = X
+bind B Turbo = Y
 bind Prev. Palette = NONE:L1
 bind Next Palette = NONE:R1
diff --git a/skeleton/SYSTEM/rg35xx/paks/Emus/GBA.pak/default.cfg b/skeleton/SYSTEM/rg35xx/paks/Emus/GBA.pak/default.cfg
index ea76e21..aaed15c 100644
--- a/skeleton/SYSTEM/rg35xx/paks/Emus/GBA.pak/default.cfg
+++ b/skeleton/SYSTEM/rg35xx/paks/Emus/GBA.pak/default.cfg
@@ -8,7 +8,7 @@ bind Select = SELECT
 bind Start = START
 bind A Button = A
 bind B Button = B
-bind A Turbo = NONE:X
-bind B Turbo = NONE:Y
+bind A Turbo = X
+bind B Turbo = Y
 bind L Button = L1
 bind R Button = R1
diff --git a/skeleton/SYSTEM/rg35xx/paks/Emus/GBC.pak/default.cfg b/skeleton/SYSTEM/rg35xx/paks/Emus/GBC.pak/default.cfg
index c854f88..f2b271c 100644
--- a/skeleton/SYSTEM/rg35xx/paks/Emus/GBC.pak/default.cfg
+++ b/skeleton/SYSTEM/rg35xx/paks/Emus/GBC.pak/default.cfg
@@ -11,7 +11,7 @@ bind Select = SELECT
 bind Start = START
 bind A Button = A
 bind B Button = B
-bind A Turbo = NONE:X
-bind B Turbo = NONE:Y
+bind A Turbo = X
+bind B Turbo = Y
 bind Prev. Palette = NONE:L1
 bind Next Palette = NONE:R1
diff --git a/skeleton/SYSTEM/rg35xx/paks/Emus/MD.pak/default.cfg b/skeleton/SYSTEM/rg35xx/paks/Emus/MD.pak/default.cfg
index dac4089..a08b686 100644
--- a/skeleton/SYSTEM/rg35xx/paks/Emus/MD.pak/default.cfg
+++ b/skeleton/SYSTEM/rg35xx/paks/Emus/MD.pak/default.cfg
@@ -3,6 +3,7 @@
 -picodrive_smsfm = off
 -picodrive_smsmapper = Auto
 -picodrive_ggghost = off
+-picodrive_input1 = 6 button pad
 
 bind Up = UP
 bind Down = DOWN
@@ -11,8 +12,8 @@ bind Right = RIGHT
 bind Mode = SELECT
 bind Start = START
 bind A Button = Y
-bind B Button = X:B
+bind B Button = B
 bind C Button = A
-bind X Button = B:L1
-bind Y Button = L1:X
+bind X Button = L1
+bind Y Button = X
 bind Z Button = R1
diff --git a/workspace/all/common/api.c b/workspace/all/common/api.c
index f15f619..608274b 100644
--- a/workspace/all/common/api.c
+++ b/workspace/all/common/api.c
@@ -764,11 +764,11 @@ int GFX_blitHardwareGroup(SDL_Surface* dst, int show_setting) {
 void GFX_blitHardwareHints(SDL_Surface* dst, int show_setting) {
 	if (BTN_MOD_VOLUME==BTN_SELECT && BTN_MOD_BRIGHTNESS==BTN_START) {
 		if (show_setting==1) GFX_blitButtonGroup((char*[]){ "SELECT","VOLUME",  NULL }, 0, dst, 0);
-		else GFX_blitButtonGroup((char*[]){ "START","BRIGHTNESS",  NULL }, 0, dst, 0);
+		else GFX_blitButtonGroup((char*[]){ "START","ЯРКОСТЬ",  NULL }, 0, dst, 0);
 	}
 	else {
-		if (show_setting==1) GFX_blitButtonGroup((char*[]){ BRIGHTNESS_BUTTON_LABEL,"BRIGHTNESS",  NULL }, 0, dst, 0);
-		else GFX_blitButtonGroup((char*[]){ "MENU","BRIGHTNESS",  NULL }, 0, dst, 0);
+		if (show_setting==1) GFX_blitButtonGroup((char*[]){ BRIGHTNESS_BUTTON_LABEL,"ЯРКОСТЬ",  NULL }, 0, dst, 0);
+		else GFX_blitButtonGroup((char*[]){ "MENU","ЯРКОСТЬ",  NULL }, 0, dst, 0);
 	}
 	
 }
@@ -1469,8 +1469,8 @@ void PWR_powerOff(void) {
 		gfx.screen = GFX_resize(w,h,p);
 		
 		char* msg;
-		if (HAS_POWER_BUTTON || HAS_POWEROFF_BUTTON) msg = exists(AUTO_RESUME_PATH) ? "Quicksave created,\npowering off" : "Powering off";
-		else msg = exists(AUTO_RESUME_PATH) ? "Quicksave created,\npower off now" : "Power off now";
+		if (HAS_POWER_BUTTON || HAS_POWEROFF_BUTTON) msg = exists(AUTO_RESUME_PATH) ? "Быстрое сохранение создано,\nвыключаюсь" : "Выключаюсь";
+		else msg = exists(AUTO_RESUME_PATH) ? "Быстрое сохранение создано,\nтеперь можно выключить" : "Теперь можно выключить";
 		
 		// LOG_info("PWR_powerOff %s (%ix%i)\n", gfx.screen, gfx.screen->w, gfx.screen->h);
 		
diff --git a/workspace/all/common/defines.h b/workspace/all/common/defines.h
index 53b782f..4d555c2 100644
--- a/workspace/all/common/defines.h
+++ b/workspace/all/common/defines.h
@@ -14,7 +14,7 @@
 #define ROOT_SYSTEM_PATH SDCARD_PATH "/.system/"
 #define SYSTEM_PATH SDCARD_PATH "/.system/" PLATFORM
 #define RES_PATH SDCARD_PATH "/.system/res"
-#define FONT_PATH RES_PATH "/BPreplayBold-unhinted.otf"
+#define FONT_PATH RES_PATH "/MPLUSRounded1c-ExtraBold.ttf"
 #define USERDATA_PATH SDCARD_PATH "/.userdata/" PLATFORM
 #define SHARED_USERDATA_PATH SDCARD_PATH "/.userdata/shared"
 #define PAKS_PATH SYSTEM_PATH "/paks"
@@ -23,7 +23,7 @@
 #define AUTO_RESUME_PATH SHARED_USERDATA_PATH "/.minui/auto_resume.txt"
 #define AUTO_RESUME_SLOT 9
 
-#define FAUX_RECENT_PATH SDCARD_PATH "/Recently Played"
+#define FAUX_RECENT_PATH SDCARD_PATH "/Недавние игры"
 #define COLLECTIONS_PATH SDCARD_PATH "/Collections"
 
 #define LAST_PATH "/tmp/last.txt" // transient
@@ -64,7 +64,7 @@
 
 #define FONT_LARGE 16 	// menu
 #define FONT_MEDIUM 14 	// single char button label
-#define FONT_SMALL 12 	// button hint
+#define FONT_SMALL 11 	// button hint
 #define FONT_TINY 10  	// multi char button label
 
 ///////////////////////////////
diff --git a/workspace/all/minarch/minarch.c b/workspace/all/minarch/minarch.c
index 78bffae..e4ce8fa 100644
--- a/workspace/all/minarch/minarch.c
+++ b/workspace/all/minarch/minarch.c
@@ -2468,11 +2468,11 @@ static struct {
 	.preview_exists = 0,
 	
 	.items = {
-		[ITEM_CONT] = "Continue",
-		[ITEM_SAVE] = "Save",
-		[ITEM_LOAD] = "Load",
-		[ITEM_OPTS] = "Options",
-		[ITEM_QUIT] = "Quit",
+		[ITEM_CONT] = "Продолжить",
+		[ITEM_SAVE] = "Сохранить",
+		[ITEM_LOAD] = "Загрузить",
+		[ITEM_OPTS] = "Опции",
+		[ITEM_QUIT] = "Выход",
 	}
 };
 
@@ -2488,7 +2488,7 @@ void Menu_init(void) {
 
 	sprintf(menu.slot_path, "%s/%s.txt", menu.minui_dir, game.name);
 	
-	if (simple_mode) menu.items[ITEM_OPTS] = "Reset";
+	if (simple_mode) menu.items[ITEM_OPTS] = "Сбросить игру";
 	
 	if (game.m3u_path[0]) {
 		char* tmp;
@@ -2915,7 +2915,7 @@ static int OptionSaveChanges_onConfirm(MenuList* list, int i) {
 			break;
 		}
 	}
-	Menu_message(message, (char*[]){ "A","OKAY", NULL });
+	Menu_message(message, (char*[]){ "A","ОКЕЙ", NULL });
 	OptionSaveChanges_updateDesc();
 	return MENU_CALLBACK_EXIT;
 }
@@ -3754,8 +3754,8 @@ static void Menu_loop(void) {
 			SDL_FreeSurface(text);
 			
 			if (show_setting && !GetHDMI()) GFX_blitHardwareHints(screen, show_setting);
-			else GFX_blitButtonGroup((char*[]){ BTN_SLEEP==BTN_POWER?"POWER":"MENU","SLEEP", NULL }, 0, screen, 0);
-			GFX_blitButtonGroup((char*[]){ "B","BACK", "A","OKAY", NULL }, 1, screen, 1);
+			else GFX_blitButtonGroup((char*[]){ BTN_SLEEP==BTN_POWER?"POWER":"MENU","СОН", NULL }, 0, screen, 0);
+			GFX_blitButtonGroup((char*[]){ "B","НАЗАД", "A","ОКЕЙ", NULL }, 1, screen, 1);
 			
 			// list
 			oy = (((DEVICE_HEIGHT / FIXED_SCALE) - PADDING * 2) - (MENU_ITEM_COUNT * PILL_SIZE)) / 2;
@@ -3844,8 +3844,8 @@ static void Menu_loop(void) {
 				else {
 					SDL_Rect preview_rect = {ox,oy,hw,hh};
 					SDL_FillRect(screen, &preview_rect, 0);
-					if (menu.save_exists) GFX_blitMessage(font.large, "No Preview", screen, &preview_rect);
-					else GFX_blitMessage(font.large, "Empty Slot", screen, &preview_rect);
+					if (menu.save_exists) GFX_blitMessage(font.large, "Нет картинки", screen, &preview_rect);
+					else GFX_blitMessage(font.large, "Пустой слот", screen, &preview_rect);
 				}
 				
 				// pagination
diff --git a/workspace/all/minui/minui.c b/workspace/all/minui/minui.c
index 6e34ba9..678e469 100644
--- a/workspace/all/minui/minui.c
+++ b/workspace/all/minui/minui.c
@@ -1397,9 +1397,9 @@ int main (int argc, char *argv[]) {
 				
 				// buttons (duped and trimmed from below)
 				if (show_setting && !GetHDMI()) GFX_blitHardwareHints(screen, show_setting);
-				else GFX_blitButtonGroup((char*[]){ BTN_SLEEP==BTN_POWER?"POWER":"MENU","SLEEP",  NULL }, 0, screen, 0);
+				else GFX_blitButtonGroup((char*[]){ BTN_SLEEP==BTN_POWER?"POWER":"MENU","СОН",  NULL }, 0, screen, 0);
 				
-				GFX_blitButtonGroup((char*[]){ "B","BACK",  NULL }, 0, screen, 1);
+				GFX_blitButtonGroup((char*[]){ "B","НАЗАД",  NULL }, 0, screen, 1);
 			}
 			else {
 				// list
@@ -1461,28 +1461,28 @@ int main (int argc, char *argv[]) {
 				}
 				else {
 					// TODO: for some reason screen's dimensions end up being 0x0 in GFX_blitMessage...
-					GFX_blitMessage(font.large, "Empty folder", screen, &(SDL_Rect){0,0,screen->w,screen->h}); //, NULL);
+					GFX_blitMessage(font.large, "Пустая папка", screen, &(SDL_Rect){0,0,screen->w,screen->h}); //, NULL);
 				}
 			
 				// buttons
 				if (show_setting && !GetHDMI()) GFX_blitHardwareHints(screen, show_setting);
-				else if (can_resume) GFX_blitButtonGroup((char*[]){ "X","RESUME",  NULL }, 0, screen, 0);
+				else if (can_resume) GFX_blitButtonGroup((char*[]){ "X","ПРОДОЛЖИТЬ",  NULL }, 0, screen, 0);
 				else GFX_blitButtonGroup((char*[]){ 
-					BTN_SLEEP==BTN_POWER?"POWER":"MENU",
-					BTN_SLEEP==BTN_POWER||simple_mode?"SLEEP":"INFO",  
+					BTN_SLEEP==BTN_POWER?"POWER":"MENU",
+					BTN_SLEEP==BTN_POWER||simple_mode?"СОН":"ИНФО",
 					NULL }, 0, screen, 0);
 			
 				if (total==0) {
 					if (stack->count>1) {
-						GFX_blitButtonGroup((char*[]){ "B","BACK",  NULL }, 0, screen, 1);
+						GFX_blitButtonGroup((char*[]){ "B","НАЗАД",  NULL }, 0, screen, 1);
 					}
 				}
 				else {
 					if (stack->count>1) {
-						GFX_blitButtonGroup((char*[]){ "B","BACK", "A","OPEN", NULL }, 1, screen, 1);
+						GFX_blitButtonGroup((char*[]){ "B","НАЗАД", "A","ОТКРЫТЬ", NULL }, 1, screen, 1);
 					}
 					else {
-						GFX_blitButtonGroup((char*[]){ "A","OPEN", NULL }, 0, screen, 1);
+						GFX_blitButtonGroup((char*[]){ "A","ОТКРЫТЬ", NULL }, 0, screen, 1);
 					}
 				}
 			}
